#!/usr/bin/env bash
if [ $@ ]; then
  composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition:$1 . ;
else
  composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition . ;
fi
composer install;
chmod u+w -R ./var ./vendor ./pub/static ./pub/media ./app/etc ;
magento setup:install \
    --base-url=http://magento.test.pwa/ \
    --db-host=db \
    --db-name=magento \
    --db-user=magento \
    --db-password=magento \
    --admin-firstname=Magento \
    --admin-lastname=Commerce \
    --admin-email=user@example.com \
    --admin-user=admin \
    --admin-password=admin123 \
    --language=en_US \
    --currency=USD \
    --timezone=America/Chicago \
    --use-rewrites=1 \
    --backend-frontname=admin \
    --cache-backend=redis \
    --cache-backend-redis-server=redis \
    --cache-backend-redis-port=6379 \
    --cache-backend-redis-db=0 \
    --page-cache=redis \
    --page-cache-redis-server=redis \
    --page-cache-redis-port=6379 \
    --page-cache-redis-db=1 \
    --session-save=redis \
    --session-save-redis-host=redis-session \
    --session-save-redis-port=6379 \
    --session-save-redis-max-concurrency=6 \
    --session-save-redis-disable-locking=0 \
    --session-save-redis-break-after-frontend=5 \
    --session-save-redis-log-level=3 \
    --session-save-redis-db=2 \
    --cleanup-database ;
#n98 cron:install; #todo
magento indexer:set-mode schedule;
magento setup:upgrade \
&& magento indexer:reindex \
&& magento cache:flush;
#mv package.json.sample package.json ; mv Gruntfile.js.sample Gruntfile.js; #todo
#npm i; #todo
#todo need to compile static file
magento deploy:mode:set developer \
&& composer dump-autoload -o \
&& clear && echo "
===================== ðŸš€ Done ðŸš€ ===================

      Magento 2 Installed successfully!

      ðŸŒŽ Admin: http://magento.test.pwa/admin
      ðŸ‘¤ User: admin
      ðŸ”‘ Password: admin123

===================== ðŸš€ Done ðŸš€ ==================="
